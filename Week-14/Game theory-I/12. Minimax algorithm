Evaluation functions:

  Let's say there is a 2-player game, played by player 1 and player 2
  Now, at any point of time, considering what is the condition of the game currently, which is also called as the 
  state of the game at that point of time.
  Let's say at a certain point of time t, the state of the game is s
  
  So, we have an evaluation function F, which upon evalutating the state s, will return a value V, like
    F(s) = v
  Now, there is a threshold T, such that
    if V > T current condition of the game is win for player 1
    else if V < T current condition of the game is win for player 2
  
  Now, the evaluation functions cannot tell the actal deterministic value of the game.
  It is a probabilistic determination, so we use various ways to make the results as accurate as possible,
  but since it is not deterministic, it won't always give 100% perfect results.
  
  And, how good the evaluation function is, will be a very crucial aspect towards how successful the minimax algorithm will run.


Minimax algorithm:

  Lets say the initial state of the game is s, and from that state player 1 can play moves which will lead to s1 an s2 states.
  Now, further, suppose player 2 plays from state s1 which will lead to state s3 and s4, and for s2 it will lead to s5 and s6.

  Now, going further down in the states, the states will return some value V of F(s) by the function.

  Since these functions will return some value, player 2 from below levels will try to choose as minimum value as possible 
  from the two below states since he will win if the value is less than threshold T.
  In contract to player 2, player 1 will try to choose as maximum value as possible to win from the two states, since he will 
  win the game if the vale is greater than threshold T.

  This maximization and minimization of the states possible by the players to win is called as the minimax algorithm.
