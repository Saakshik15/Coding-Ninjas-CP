/*
Jack and Michael are waiting in a room, eager to join the CodeKaze elimination Round. They decide to pass the time by playing a game.

In this game's setup, they write ‘N’ positive integers on a blackboard. Then the players take turns, starting with Jack. 
In one turn, a player selects one of the integers, divides it by 2, 3, 4, 5 or 6, and then takes the floor to make it an integer again. 
If the integer becomes 0, it is erased from the board. The player who makes the last move wins.

Jack and Michael are very competitive, so aside from wanting to win CodeKaze, they also want to win this game. 
Assuming they play with the optimal strategy, your task is to predict who wins the game.

For example:
Let A = [1, 1, 2]. If Jack selects the third element and divide it by ‘3’ and remove it, then the new array will look like 
A = [1, 1], Now, if Michael selects the second element and divides it by ‘3’, it will delete the element, and the new array will 
look like A = [1]. Now, Jack selects the only element and divides it by '2', removes it and wins the game.
*/

Suppose, we are given 3 numbers 1, 3, 5
According to Sprague Grundy theorem, we can treat them as subgames.
So, We have Grundy numbers for these subgames as G(1), G(3), G(5)
And if G(1) ^ G(3) ^ G(5) > 0 player 1, who starts the game will win the game, if =0 player 1 will lose the game.

Now, according to the rules of the game, from G(n), we can go the the following moves:
G(n/2), G(n/3), G(n/4), G(n/5), G(n/6)

and, G(n) = mex of all of these numbers, ie,
  mex(G(n/2), G(n/3), G(n/4), G(n/5), G(n/6))......statement 1

Now, let us assume we are solving for G(5)
The, G(5) = mex(G(2), G(1), G(0)) ......according to the statement 1, we have calculated by dividing the values by 2,3,4,5,6
  Now, G(2) would be in similar way: mex(G(1), G(0))
       G(1) would be mex(G(0))
       G(0) would be 0 

  Calculating G(5) = mex{2,1,0} =3

  Now, similarly to G(5), we can calculate for G(3) and G(1) as well, which are 1 and 2 respectively.

Now, to determine the winner of the game:
  G(1) ^ G(3) ^ G(5) must be > 0
  1^2^3 = 0, that is, player 1 will lost the game for the piles 1,3,5


  Now, the time complexity of this solution would be:
  log(n) which will eventually be broken down to O(10^18) which wont work because of the length.
  So, for this solution we need to find some patterns in the solution which would be broken down to an optimal solution.
